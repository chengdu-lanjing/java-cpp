entao@chentao:~/frank/cpp-project/java-cpp/scripts$ ./all_demos.sh 
-------------------------------------------------------------
This is the menu
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
h. Help, print all menu items
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
1. Memory management demos
    1.1 Demo about Ref & WeakRef
    1.2 Demo about object resurrection
    1.3 Bad demo about memory leak
    1.4 Integrative demo about complex object tree managment
2. Exception demos
    2.1 Demo about exception chain
    2.2 Demo about how to catch and rethrow exception
    2.3 Demo about how to use macro 'defer' to make up for the fact that C++ does not support 'finally'
3. Array demo
4. Functional interface demos
    4.1 Demo about how to combine and split functional interfaces by '+', '-', '+=', '-='
    4.2 Demo about how to use functional interface to support java bean event
5. Multiple threads demos
    5.1 Demo about blocking queue
    5.2 Demo about simple thread pool
    5.3 Demo about scheduled thread pool
6. Logging demo
7. HTTP demo (Please install curl first because it requires '*.h' and '*.so' of libcurl)
8. Database demo (Please install sqlite3 first because it requires '*.h' and '*.so' of libsqlite3)
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
a. Run all demos
x. Exit
-------------------------------------------------------------
Please enter you choice: a
-------------------------------------------------------------
1.1 Demo about Ref & WeakRef
>>>
demo_memory::TestObject@0x1bd6010 has been created
demo> Initialize variables
ref1 = demo_memory::TestObject@0x1bd6010, ref2 = demo_memory::TestObject@0x1bd6010, weakRef1 = WeakRef(demo_memory::TestObject@0x1bd6010), weakRef2 = WeakRef(demo_memory::TestObject@0x1bd6010)
demo> Let ref1 be nullptr
ref1 = nullptr, ref2 = demo_memory::TestObject@0x1bd6010, weakRef1 = WeakRef(demo_memory::TestObject@0x1bd6010), weakRef2 = WeakRef(demo_memory::TestObject@0x1bd6010)
demo> Let ref2 be nullptr(The object will be destroyed and all the weak references will be cleared automatically)
demo_memory::TestObject@0x1bd6010 will be destroyed
ref1 = nullptr, ref2 = nullptr, weakRef1 = WeakRef(nullptr), weakRef2 = WeakRef(nullptr)
All the objects are deleted
-------------------------------------------------------------
1.2 Demo about object resurrection
>>>
Object demo_memory::ResurrectedObject is finalized, it  will be resurrected soon
Important message : Object demo_memory::ResurrectedObject is resurrected!
Object demo_memory::ResurrectedObject is finalized, it  will be resurrected soon
Important message : Object demo_memory::ResurrectedObject is resurrected!
Object demo_memory::ResurrectedObject is finalized, it  will be resurrected soon
Important message : Object demo_memory::ResurrectedObject is resurrected!
Object demo_memory::ResurrectedObject is finalized, but it won't be resurrected
Finally, the C++ desctructor is invoked
All the objects are deleted
-------------------------------------------------------------
1.3 Bad demo about memory leak
>>>
6 object(s) is(are) still alive
3 'demo_memory::Man' object(s) is(are) still alive
3 'demo_memory::Woman' object(s) is(are) still alive
-------------------------------------------------------------
1.4 Integrative demo about complex object tree managment
>>>
<html>
	<head>
		<title>
			Helloworld for angular
		</title>
		<link href="material.css" rel="stylesheet" type="text/css"/>
		<script src="angular.js" type="text/javascript"></script>
	</head>
	<body ng-app="helloworld" ng-init="backgroundColor='white'" ng-style="background-color: backgroundColor">
		Please change the color of this page
		<!--The background color of this page will be changed automatically when this input element is changed-->
		<input ng-model="backgroundColor" type="text"/>
	</body>
</html>
All the objects are deleted
-------------------------------------------------------------
2.1 Demo about exception chain
>>>
demo_exception::CException: Business processor 'C' met some prolbems
	at ../demo/exception/chain.cpp:38
Caused by: demo_exception::BException: Business processor 'B' met some problems
	at ../demo/exception/chain.cpp:31
Caused by: demo_exception::AException: Business Processor 'A' met some problems
	at ../demo/exception/chain.cpp:25
All the objects are deleted
-------------------------------------------------------------
2.2 Demo about how to catch and rethrow exception
>>>
Begin transaction********
Commit transaction********
Begin transaction********
Rollback transaction********
com_lanjing_cpp_common::IllegalArgumentException: The company whose name is 'Alibaba' already exists
	at ../demo/exception/rethrow.cpp:38
All the objects are deleted
-------------------------------------------------------------
2.3 Demo about how to use macro 'defer' to make up for the fact that C++ does not support 'finally'
>>>
Setup-1
Setup-2
Setup-3
Good test without exception
Teardonw-3
Teardown-2
Teardown-1
Setup-1
Setup-2
Setup-3
Teardonw-3
Teardown-2
Teardown-1
com_lanjing_cpp_common::Exception: Bad test with exception
	at ../demo/exception/finally.cpp:25
All the objects are deleted
-------------------------------------------------------------
3. Array demo
>>>
Test value array, consider the element type as C++ type with constructor and destructor
Value::Value() is invoked
Value::Value() is invoked
Value::Value() is invoked
Value::~Value() of 'Item-2'is invoked
Value::~Value() of 'Item-1'is invoked
Value::~Value() of 'Item-0'is invoked
Test value array, consider the element type as C type without constructor and destructor
Change the fibonacci array
Print the element of changed fibonacci array
-1
-1
-2
-3
-5
-8
-13
-21
-34
-55
The macro 'DEBUG' is defined so that array checks the whether the index is out of range
com_lanjing_cpp_common::IllegalArgumentException: Array index out of range
	at ../src/Common.h:1543
All the objects are deleted
-------------------------------------------------------------
4.1 Demo about how to combine and split functional interfaces by '+', '-', '+=', '-='
>>>
Function '+' is invoked
Function '-' is invoked
Function '*' is invoked
Function '/' is invoked
6.42857
Function '+' is invoked
Function '*' is invoked
315
all is nullptr
All the objects are deleted
-------------------------------------------------------------
4.2 Demo about how to use functional interface to support java bean event
>>>
Change name to 'Kate'
	Use the handler object 'event-handler-1' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is '' and the new name is 'Kate'
Change name to 'Tom'
	Use the handler object 'event-handler-1' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is 'Kate' and the new name is 'Tom'
	Use the handler object 'event-handler-2' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is 'Kate' and the new name is 'Tom'
Change name to 'Mary'
	Use the handler object 'event-handler-1' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is 'Tom' and the new name is 'Mary'
	Use the handler object 'event-handler-2' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is 'Tom' and the new name is 'Mary'
	Use the handler object 'event-handler-3' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is 'Tom' and the new name is 'Mary'
Change name to 'Linda'
	Use the handler object 'event-handler-2' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is 'Mary' and the new name is 'Linda'
	Use the handler object 'event-handler-3' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is 'Mary' and the new name is 'Linda'
Change name to 'Smith'
	Use the handler object 'event-handler-3' to handle the event:
		The name of 'demo_functional::Person@0x1f5a010' has been changed, the old name is 'Linda' and the new name is 'Smith'
Change name to 'Lucy'
All the objects are deleted
-------------------------------------------------------------
5.1 Demo about blocking queue
>>>
Received: Message "This is message-1"
Received: Message "This is message-2"
Received: Message "This is message-3"
Received: Message "This is message-4"
Received: Message "This is message-5"
All the objects are deleted
-------------------------------------------------------------
5.2 Demo about simple thread pool
>>>
[millis: 1541396569305] Task-1
[millis: 1541396569305] Task-2
[millis: 1541396569305] Task-3
[millis: 1541396569305] Task-4
--------------------------------------
[millis: 1541396570305] Task-5
[millis: 1541396570305] Task-6
[millis: 1541396570305] Task-7
[millis: 1541396570305] Task-8
--------------------------------------
[millis: 1541396571306] Task-10
[millis: 1541396571306] Task-11
[millis: 1541396571306] Task-9
[millis: 1541396571306] Task-12
--------------------------------------
All the objects are deleted
-------------------------------------------------------------
5.3 Demo about scheduled thread pool
>>>
--------------------schedule--------------------
[millis: 1541396573489] Scheduled-A task will be executed 1 second later
[millis: 1541396573489] Scheduled-B task will be executed 0.5 second later
[millis: 1541396573990] Scheduled task-B
[millis: 1541396574489] Scheduled task-A
--------------------sheduleAtFixedRate--------------------
[millis: 1541396575590] Scheduled task at fixed rate: 500ms
[millis: 1541396576590] Scheduled task at fixed rate: 500ms
[millis: 1541396577590] Scheduled task at fixed rate: 500ms
[millis: 1541396578591] Scheduled task at fixed rate: 500ms
[millis: 1541396579591] Scheduled task at fixed rate: 500ms
--------------------sheduleWithFixedDelay--------------------
[millis: 1541396580690] Scheduled task with fixed delay: 500ms
[millis: 1541396582191] Scheduled task with fixed delay: 500ms
[millis: 1541396583691] Scheduled task with fixed delay: 500ms
All the objects are deleted
-------------------------------------------------------------
6. Logging
>>>

2018-11-5 13:43:6 demo_logging::Business - INFO: By relativity theory, 1.89765e+08m/s + 1.59233e+08/ms = 2.61186e+08m/s
2018-11-5 13:43:6 demo_logging::Business -DEBUG: Peter Piper picked a peck of pickled peppers. A peck of pickled peppers Peter Piper picked. If Peter Piper picked a peck of pickled peppers, Where's the peck of pickled peppers Peter Piper picked?
2018-11-5 13:43:6 demo_logging::Business -ERROR: OMG, there is an exception whose type is 'demo_logging::WrapperException'
demo_logging::WrapperException: This is a wrapper for raw exception
	at ../demo/logging/simple.cpp:32
Caused by: demo_logging::RawException: Holy crap, there is a raw exception
	at ../demo/logging/simple.cpp:26
----------Content of '/tmp/logging.xml'----------
<?xml version = "1.0"?>
<log-records>
	<log-record>
		<timestamp>2018-11-5 13:43:6</timestamp>
		<tag>demo_logging::Business</tag>
		<level>INFO</level>
		<message>By relativity theory, 1.89765e+08m/s + 1.59233e+08/ms = 2.61186e+08m/s</message>
	</log-record>
	<log-record>
		<timestamp>2018-11-5 13:43:6</timestamp>
		<tag>demo_logging::Business</tag>
		<level>ERROR</level>
		<message>OMG, there is an exception whose type is 'demo_logging::WrapperException'</message>
		<exception>
			<fileName>../demo/logging/simple.cpp<fileName>
			<lineNumber>32<lineNumber>
			<className>demo_logging::WrapperException</className>
			<message>This is a wrapper for raw exception</message>
			<caused-by>
				<fileName>../demo/logging/simple.cpp<fileName>
				<lineNumber>26<lineNumber>
				<className>demo_logging::RawException</className>
				<message>Holy crap, there is a raw exception</message>
			</caused-by>
		</exception>
	</log-record>
No end tag '</log-records>' here because it will be appended after the program exit, not now!
All the objects are deleted
-------------------------------------------------------------
7. HTTP demo
>>>
<html>
	<head>
		
		<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
		<meta http-equiv="content-type" content="text/html;charset=utf-8">
		<meta content="always" name="referrer">
        <meta name="theme-color" content="#2932e1">
        <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
        <link rel="icon" sizes="any" mask href="//www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg">
        <link rel="search" type="application/opensearchdescription+xml" href="/content-search.xml" title="百度搜索" />
		
		
<title>WTF_百度搜索</title>

		

		
<style data-for="result" type="text/css" id="css_newi_result">body{color:#333;background:#fff;padding:6px 0 0;margin:0;position:relative;min-width:900px}
body,th,td,.p1,.p2{font-family:arial}
p,form,ol,ul,li,dl,dt,dd,h3{margin:0;padding:0;list-
All the objects are deleted
-------------------------------------------------------------
8. Database demo
>>>

2018-11-5 13:43:10 demo_database::ProductRepository - INFO: Create table 'product'
-----------------------------------
Clear products
Cleared, affected row count is 0
-----------------------------------
Insert rows
-----------------------------------
Query all the products
{ id: 1, name: "Egg", price: 3.6 }
{ id: 2, name: "Pork", price: 16.2 }
{ id: 3, name: "Cake", price: 14.5 }
{ id: 4, name: "Beef", price: 25.3 }
-----------------------------------
Query products like '%e%'
{ id: 4, name: "Beef", price: 25.3 }
{ id: 3, name: "Cake", price: 14.5 }
{ id: 1, name: "Egg", price: 3.6 }
-----------------------------------
Query products by price range [10, 15]
{ id: 3, name: "Cake", price: 14.5 }
-----------------------------------
Modify the price of 'Pork' to be 14.9
-----------------------------------
Query products by price range [10, 15]
{ id: 3, name: "Cake", price: 14.5 }
{ id: 2, name: "Pork", price: 14.9 }

All the objects are deleted
-------------------------------------------------------------
Please enter you choice: x
chentao@chentao:~/frank/cpp-project/java-cpp/scripts$ 

